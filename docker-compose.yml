version: "3.7"
# Profiles: master, slave, client


x-mem: &default-mem
    mem_limit: 16m
    mem_reservation: 16m
    cpus: 0.1
    restart: always

x-mem2: &default-mem2
    mem_limit: 256m
    mem_reservation: 64m
    cpus: 0.25
    restart: always

x-haproxy: &haproxy
    image: eisandbar/network:haproxy
    build:
        context: ./haproxy/
        dockerfile: Dockerfile
    depends_on:
        - nginx

x-keepalived: &keepalived
    image: eisandbar/network:keepalived
    cap_add:
        - NET_ADMIN
        - NET_BROADCAST
        - NET_RAW
    depends_on:
        - haproxy_slave
        - haproxy_master

services: 
    haproxy_master:
        <<: *default-mem2
        <<: *haproxy
        networks:
            web-net:
                ipv4_address: "172.20.1.20"

    keepalived_master:
        <<: *default-mem2
        <<: *keepalived
        build:
            context: ./keepalived/ 
            dockerfile: Dockerfile_master
        network_mode: host
        profiles: ["master"]
        
    haproxy_slave:
        <<: *default-mem2
        <<: *haproxy
        networks:
            web-net:
                ipv4_address: "172.20.1.30"

    keepalived_slave:
        <<: *default-mem2
        <<: *keepalived
        build:
            context: ./keepalived/ 
            dockerfile: Dockerfile_slave
        network_mode: host
        profiles: ["slave"]

    nginx:        
        <<: *default-mem2
        image: eisandbar/network:nginx
        build:
            context: ./nginx/
            dockerfile: Dockerfile
        deploy:
            replicas: 2
        depends_on:
            - server
        networks:
            web-net:
    
    server:        
        <<: *default-mem2
        image: eisandbar/network:server
        build: ./src/server
        deploy:
            replicas: 3
        depends_on:
            - db
        volumes:
            - ./:/app
        networks:
            - db-net
            - web-net
        environment:
            POSTGRES_USER: pguser
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: pgdb
            POSTGRES_HOST: db

    worker:
        <<: *default-mem2
        image: eisnadbar/network:worker
        build: ./src/worker
        depends_on:
            - rabbitmq
        deploy:
            replicas: 3
        networks:
            - web-net
    
    client:
        <<: *default-mem2
        image: eisandbar/network:client
        build: ./src/client
        depends_on:
            - keepalived_master
            - haproxy_master
            - haproxy_slave
        
        deploy:
            replicas: 3
        network_mode: host
        profiles: ["client"]
    
    db:
        <<: *default-mem2
        image: postgres
        volumes:
            - ./postgres/conf/my-postgres.conf:/etc/postgresql/postgresql.conf
            - ./postgres/data:/var/lib/postgresql/data
        
        command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
        networks:
            - db-net
        environment:
            POSTGRES_USER: pguser
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: pgdb
    
    redis:
        <<: *default-mem
        image: eisandbar/network:redis
        build:
            context: ./redis/
            dockerfile: Dockerfile
        volumes:
            - redis:/data
        networks:
            - db-net

    rabbitmq:
        <<: *default-mem2
        build:
            context: ./rabbit/
            dockerfile: Dockerfile
        environment:
            RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: pass
            RABBITMQ_DEFAULT_VHOST: /
        networks:
            - web-net

networks:
    web-net:
        ipam:
            config:
                - subnet: 172.20.0.0/16
    db-net:
        driver: bridge


volumes:
    postgres:
    redis: